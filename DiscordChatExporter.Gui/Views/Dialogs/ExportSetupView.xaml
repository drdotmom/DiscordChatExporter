<UserControl
    x:Class="DiscordChatExporter.Gui.Views.Dialogs.ExportSetupView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:DiscordChatExporter.Gui.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dialogs="clr-namespace:DiscordChatExporter.Gui.ViewModels.Dialogs"
    xmlns:globalization="clr-namespace:System.Globalization;assembly=System.Runtime"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:utils="clr-namespace:DiscordChatExporter.Gui.Utils"
    Width="380"
    d:DataContext="{d:DesignInstance Type=dialogs:ExportSetupViewModel}"
    Style="{DynamicResource MaterialDesignRoot}"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--  Guild/channel info  -->
        <Grid Grid.Row="0" Margin="16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--  Guild icon  -->
            <Ellipse
                Grid.Column="0"
                Width="32"
                Height="32">
                <Ellipse.Fill>
                    <ImageBrush ImageSource="{Binding Guild.IconUrl}" />
                </Ellipse.Fill>
            </Ellipse>

            <!--  Channel count (for multiple channels)  -->
            <TextBlock
                Grid.Column="1"
                Margin="8,0,0,0"
                VerticalAlignment="Center"
                FontSize="19"
                FontWeight="Light"
                TextTrimming="CharacterEllipsis"
                Visibility="{Binding IsSingleChannel, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}">
                <Run Text="Выбрано каналов: " />
                <Run Text="{Binding Channels.Count, Mode=OneWay}" />
            </TextBlock>

            <!--  Category and channel name (for single channel)  -->
            <TextBlock
                Grid.Column="1"
                Margin="8,0,0,0"
                VerticalAlignment="Center"
                FontSize="19"
                FontWeight="Light"
                TextTrimming="CharacterEllipsis"
                Visibility="{Binding IsSingleChannel, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                <Run Text="{Binding Channels[0].Category.Name, Mode=OneWay}" ToolTip="{Binding Channels[0].Category.Name, Mode=OneWay}" />
                <Run Text="/" />
                <Run
                    FontWeight="SemiBold"
                    Text="{Binding Channels[0].Name, Mode=OneWay}"
                    ToolTip="{Binding Channels[0].Name, Mode=OneWay}" />
            </TextBlock>
        </Grid>

        <Border
            Grid.Row="1"
            Padding="0,8"
            BorderBrush="{DynamicResource MaterialDesignDivider}"
            BorderThickness="0,1">
            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <!--  Output path  -->
                    <Grid Margin="16,8">
                        <TextBox
                            Padding="16,16,42,16"
                            materialDesign:HintAssist.Hint="Путь экспорта"
                            materialDesign:HintAssist.IsFloating="True"
                            Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                            Text="{Binding OutputPath}" TextChanged="TextBox_TextChanged">
                            <TextBox.ToolTip>
                                <TextBlock>
                                    <Run Text="Путь экспорта файла(ов)." />
                                    <Run Text="Если указан каталог, имена файлов будут сгенерированы из названий каналов." />
                                    <Run Text="Путь каталога должен заканчиваться косой чертой [/]. Также, вы можете использовать ключи для генерации названий файлов. Пример: %T-%C.html" />
                                    <LineBreak />
                                    <LineBreak />
                                    <Run Text="Доступные ключи:" />
                                    <LineBreak />
                                    <Run FontWeight="SemiBold" Text="%g" />
                                    <Run Text="— guild ID" />
                                    <LineBreak />
                                    <Run FontWeight="SemiBold" Text="%G" />
                                    <Run Text="— guild name" />
                                    <LineBreak />
                                    <Run FontWeight="SemiBold" Text="%t" />
                                    <Run Text="— category ID" />
                                    <LineBreak />
                                    <Run FontWeight="SemiBold" Text="%T" />
                                    <Run Text="— category name" />
                                    <LineBreak />
                                    <Run FontWeight="SemiBold" Text="%c" />
                                    <Run Text="— channel ID" />
                                    <LineBreak />
                                    <Run FontWeight="SemiBold" Text="%C" />
                                    <Run Text="— channel name" />
                                    <LineBreak />
                                    <Run FontWeight="SemiBold" Text="%p" />
                                    <Run Text="— channel position" />
                                    <LineBreak />
                                    <Run FontWeight="SemiBold" Text="%P" />
                                    <Run Text="— category position" />
                                    <LineBreak />
                                    <Run FontWeight="SemiBold" Text="%a" />
                                    <Run Text="— after date" />
                                    <LineBreak />
                                    <Run FontWeight="SemiBold" Text="%b" />
                                    <Run Text="— before date" />
                                    <LineBreak />
                                    <Run FontWeight="SemiBold" Text="%d" />
                                    <Run Text="— current date" />
                                </TextBlock>
                            </TextBox.ToolTip>
                        </TextBox>
                        <Button
                            Width="24"
                            Height="24"
                            Margin="0,0,12,0"
                            Padding="0"
                            HorizontalAlignment="Right"
                            Command="{s:Action ShowOutputPathPrompt}"
                            Style="{DynamicResource MaterialDesignToolForegroundButton}">
                            <materialDesign:PackIcon Kind="FolderOpen" />
                        </Button>
                    </Grid>

                    <!--  Format  -->
                    <ComboBox
                        Margin="16,8"
                        materialDesign:HintAssist.Hint="Формат"
                        materialDesign:HintAssist.IsFloating="True"
                        IsReadOnly="True"
                        ItemsSource="{Binding AvailableFormats}"
                        SelectedItem="{Binding SelectedFormat}"
                        Style="{DynamicResource MaterialDesignOutlinedComboBox}"
                        ToolTip="Формат, в котором будет экспортирован канал(ы)">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={x:Static converters:ExportFormatToStringConverter.Instance}, ConverterCulture={x:Static globalization:CultureInfo.CurrentCulture}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <!--  Advanced section  -->
                    <StackPanel Visibility="{Binding IsAdvancedSectionDisplayed, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">

                        <!--  Date limits  -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <DatePicker
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="16,8,16,4"
                                materialDesign:HintAssist.Hint="С (дата)"
                                materialDesign:HintAssist.IsFloating="True"
                                DisplayDateEnd="{Binding BeforeDate, Converter={x:Static converters:DateTimeOffsetToDateTimeConverter.Instance}, ConverterCulture={x:Static globalization:CultureInfo.CurrentCulture}}"
                                SelectedDate="{Binding AfterDate, Converter={x:Static converters:DateTimeOffsetToDateTimeConverter.Instance}, ConverterCulture={x:Static globalization:CultureInfo.CurrentCulture}}"
                                Style="{DynamicResource MaterialDesignOutlinedDatePicker}"
                                ToolTip="Экспортировать только сообщения, отправленные после указанной даты." />
                            <DatePicker
                                Grid.Row="0"
                                Grid.Column="1"
                                Margin="16,8,16,4"
                                materialDesign:HintAssist.Hint="По (дата)"
                                materialDesign:HintAssist.IsFloating="True"
                                DisplayDateStart="{Binding AfterDate, Converter={x:Static converters:DateTimeOffsetToDateTimeConverter.Instance}, ConverterCulture={x:Static globalization:CultureInfo.CurrentCulture}}"
                                SelectedDate="{Binding BeforeDate, Converter={x:Static converters:DateTimeOffsetToDateTimeConverter.Instance}, ConverterCulture={x:Static globalization:CultureInfo.CurrentCulture}}"
                                Style="{DynamicResource MaterialDesignOutlinedDatePicker}"
                                ToolTip="Экспортировать только сообщения, отправленные до указанной даты." />
                            <materialDesign:TimePicker
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="16,4,16,8"
                                materialDesign:HintAssist.Hint="С (время)"
                                materialDesign:HintAssist.IsFloating="True"
                                Is24Hours="{x:Static utils:Internationalization.Is24Hours}"
                                IsEnabled="{Binding IsAfterDateSet}"
                                SelectedTime="{Binding AfterTime, Converter={x:Static converters:TimeSpanToDateTimeConverter.Instance}, ConverterCulture={x:Static globalization:CultureInfo.CurrentCulture}}"
                                Style="{DynamicResource MaterialDesignOutlinedTimePicker}"
                                ToolTip="Экспортировать только сообщения, отправленные после указанного времени." />
                            <materialDesign:TimePicker
                                Grid.Row="1"
                                Grid.Column="1"
                                Margin="16,4,16,8"
                                materialDesign:HintAssist.Hint="По (время)"
                                materialDesign:HintAssist.IsFloating="True"
                                Is24Hours="{x:Static utils:Internationalization.Is24Hours}"
                                IsEnabled="{Binding IsBeforeDateSet}"
                                SelectedTime="{Binding BeforeTime, Converter={x:Static converters:TimeSpanToDateTimeConverter.Instance}, ConverterCulture={x:Static globalization:CultureInfo.CurrentCulture}}"
                                Style="{DynamicResource MaterialDesignOutlinedTimePicker}"
                                ToolTip="Экспортировать только сообщения, отправленные до указанного времени." />
                        </Grid>

                        <!--  Partitioning  -->
                        <TextBox
                            Margin="16,8"
                            materialDesign:HintAssist.Hint="Разбивка файлов"
                            materialDesign:HintAssist.IsFloating="True"
                            Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                            Text="{Binding PartitionLimitValue}"
                            ToolTip="Разбивает файлы на части, ограниченные указанным числом сообщений (например, 100) или размером файла (например, 10mb)." />

                        <!--  Filtering  -->
                        <TextBox
                            Margin="16,8"
                            materialDesign:HintAssist.Hint="Фильтры"
                            materialDesign:HintAssist.IsFloating="True"
                            Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                            Text="{Binding MessageFilterValue}"
                            ToolTip="Only include messages that satisfy this filter (e.g. 'from:foo#1234' or 'has:image')" />

                        <!--  Markdown formatting  -->
                        <Grid Margin="16,8" ToolTip="Сохраняет форматирование текста и особое форматирование упоминаний, спец.символов и т.п.">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Text="Сохранять форматирование" />
                            <ToggleButton
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                IsChecked="{Binding ShouldFormatMarkdown}" />
                        </Grid>

                        <!--  Download assets  -->
                        <Grid Margin="16,8" ToolTip="Загружает ресурсы при экспорте (аватары, прикреплённые файлы, изображения и т.п.)">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Text="Скачивать ресуры" />
                            <ToggleButton
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                IsChecked="{Binding ShouldDownloadAssets}" />
                        </Grid>

                        <!--  Reuse assets  -->
                        <Grid Margin="16,8" ToolTip="Повторное использование загруженных ресурсов, чтобы избежать лишних запросов">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Text="Переиспользование ресурсов" />
                            <ToggleButton
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                IsChecked="{Binding ShouldReuseAssets}" />
                        </Grid>

                        <!--  Assets path  -->
                        <Grid Margin="16,8">
                            <TextBox
                                Padding="16,16,42,16"
                                materialDesign:HintAssist.Hint="Расположение ресурсов"
                                materialDesign:HintAssist.IsFloating="True"
                                Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                                Text="{Binding AssetsDirPath}"
                                ToolTip="Загружает ресурсы в указанную папку. Если не определено - путь устанавливается по пути сохранения файла." />
                            <Button
                                Width="24"
                                Height="24"
                                Margin="0,0,12,0"
                                Padding="0"
                                HorizontalAlignment="Right"
                                Command="{s:Action ShowAssetsDirPathPrompt}"
                                Style="{DynamicResource MaterialDesignToolForegroundButton}">
                                <materialDesign:PackIcon Kind="FolderOpen" />
                            </Button>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </Border>

        <!--  Buttons  -->
        <Grid Grid.Row="2" Margin="16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button
                Grid.Column="0"
                Command="{s:Action ToggleAdvancedSection}"
                IsDefault="True"
                ToolTip="Toggle advanced options">
                <Button.Style>
                    <Style BasedOn="{StaticResource MaterialDesignOutlinedButton}" TargetType="{x:Type Button}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAdvancedSectionDisplayed}" Value="False">
                                <Setter Property="Content" Value="Подробнее..." />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsAdvancedSectionDisplayed}" Value="True">
                                <Setter Property="Content" Value="Меньше" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button
                Grid.Column="2"
                Command="{s:Action Confirm}"
                Content="Экспорт"
                IsDefault="True"
                Style="{DynamicResource MaterialDesignOutlinedButton}" />
            <Button
                Grid.Column="3"
                Margin="8,0,0,0"
                Command="{s:Action Close}"
                Content="Отмена"
                IsCancel="True"
                Style="{DynamicResource MaterialDesignOutlinedButton}" />
        </Grid>
    </Grid>
</UserControl>